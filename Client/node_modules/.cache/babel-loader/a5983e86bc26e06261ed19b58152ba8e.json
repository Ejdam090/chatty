{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Desktop\\\\Apki\\\\chat-box\\\\src\\\\components\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { getAllMessageRoute, sendMessageRoute } from \"../utils/APIRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatContainer = _ref => {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      if (currentChat) {\n        const response = await axios.post(getAllMessageRoute, {\n          from: currentUser._id,\n          to: currentChat._id\n        });\n        setMessages(response.data);\n        console.log(messages);\n      }\n    };\n\n    fetchAPI();\n  }, [currentChat]);\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behaviour: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml; base64, ${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatContainer, \"JfFSEdQKAcT6qp/80mIe4QU2dtg=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n  padding-top: 1rem;\n  display: grid;\n  grid-template-rows: 10% 78% 12%;\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n  .chat-message {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n_c2 = Container;\nexport default ChatContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","ChatInput","Logout","v4","uuidv4","axios","getAllMessageRoute","sendMessageRoute","ChatContainer","currentChat","currentUser","socket","messages","setMessages","arrivalMessage","setArrivalMessage","scrollRef","fetchAPI","response","post","from","_id","to","data","console","log","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","on","prev","scrollIntoView","behaviour","avatarImage","username","map","Container","div"],"sources":["C:/Users/Adam/Desktop/Apki/chat-box/src/components/ChatContainer.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Logout from \"./Logout\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { getAllMessageRoute, sendMessageRoute } from \"../utils/APIRoutes\";\r\nconst ChatContainer = ({ currentChat, currentUser, socket }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      if (currentChat) {\r\n        const response = await axios.post(getAllMessageRoute, {\r\n          from: currentUser._id,\r\n          to: currentChat._id,\r\n        });\r\n        setMessages(response.data);\r\n        console.log(messages);\r\n      }\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [currentChat]);\r\n\r\n  const handleSendMsg = async (msg) => {\r\n    await axios.post(sendMessageRoute, {\r\n      from: currentUser._id,\r\n      to: currentChat._id,\r\n      message: msg,\r\n    });\r\n    socket.current.emit(\"send-msg\", {\r\n      to: currentChat._id,\r\n      from: currentUser._id,\r\n      message: msg,\r\n    });\r\n    const msgs = [...messages];\r\n    msgs.push({ fromSelf: true, message: msg });\r\n    setMessages(msgs);\r\n  };\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\"msg-recieve\", (msg) => {\r\n        setArrivalMessage({ fromSelf: false, message: msg });\r\n      });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage]);\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behaviour: \"smooth\" });\r\n  }, [messages]);\r\n  return (\r\n    <>\r\n      {currentChat && (\r\n        <Container>\r\n          <div className=\"chat-header\">\r\n            <div className=\"user-details\">\r\n              <div className=\"avatar\">\r\n                <img\r\n                  src={`data:image/svg+xml; base64, ${currentChat.avatarImage}`}\r\n                  alt=\"avatar\"\r\n                />\r\n              </div>\r\n              <div className=\"username\">\r\n                <h3>{currentChat.username}</h3>\r\n              </div>\r\n            </div>\r\n            <Logout />\r\n          </div>\r\n          <div className=\"chat-message\">\r\n            {messages.map((message) => {\r\n              return (\r\n                <div ref={scrollRef} key={uuidv4()}>\r\n                  <div\r\n                    className={`message ${\r\n                      message.fromSelf ? \"sended\" : \"recieved\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"content\">\r\n                      <p>{message.message}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <ChatInput handleSendMsg={handleSendMsg} />\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst Container = styled.div`\r\n  padding-top: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 10% 78% 12%;\r\n  .chat-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    .user-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n      .username {\r\n        h3 {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .chat-message {\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    overflow: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n    .message {\r\n      display: flex;\r\n      align-items: center;\r\n      .content {\r\n        max-width: 40%;\r\n        overflow-wrap: break-word;\r\n        padding: 1rem;\r\n        font-size: 1.1rem;\r\n        border-radius: 1rem;\r\n        color: #d1d1d1;\r\n      }\r\n    }\r\n    .sended {\r\n      justify-content: flex-end;\r\n      .content {\r\n        background-color: #4f04ff21;\r\n      }\r\n    }\r\n    .recieved {\r\n      justify-content: flex-start;\r\n      .content {\r\n        background-color: #9900ff20;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default ChatContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}