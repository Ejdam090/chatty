{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Desktop\\\\Apki\\\\chat-box\\\\src\\\\pages\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { allUsersRoutes } from '../utils/APIRoutes';\nimport Contacts from './../components/Contacts';\nimport Welcome from '../components/Welcome';\nimport ChatContainer from '../components/ChatContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [isLoaded, setIsLoaded] = useState(false); //set current user\n\n  useEffect(() => {\n    const fetchMyApi = async () => {\n      if (!localStorage.getItem(\"chat-app-user\")) {\n        navigate(\"/login\");\n      } else {\n        setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n        setIsLoaded(true);\n      }\n    };\n\n    fetchMyApi();\n  }, []);\n  useEffect(() => {\n    const fetch = async () => {\n      if (currentUser) {\n        if (currentUser.isAvatarImageSet) {\n          const data = await axios.get(`${allUsersRoutes}/${currentUser._id}`);\n          setContacts(data.data);\n        } else {\n          navigate(\"/setAvatar\");\n        }\n      }\n    };\n\n    fetch();\n  }, []);\n\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: contacts,\n        currentUser: currentUser,\n        changeChat: handleChatChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), isLoaded & currentChat === undefined ? /*#__PURE__*/_jsxDEV(Welcome, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(ChatContainer, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Chat, \"elR+0vxasSZ3FDMdM7NrpF9lgAQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nconst Container = styled.div`\nheight: 100vh;\nwidth: 100vw;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ngap: 1rem;\nalign-items: center;\nbackground-color: #131324;\n.container{\n  height: 85vh;\n  width: 85vw;\n  background-color: #00000076;\n  display: grid;\n  grid-template-columns: 25% 75%;\n  @media screen and (min-width: 720px) and (max-width:1080px){\n    grid-template-columns: 35% 65%;    \n  }\n\n}\n\n`;\n_c2 = Container;\nexport default Chat;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","axios","useNavigate","allUsersRoutes","Contacts","Welcome","ChatContainer","Chat","navigate","contacts","setContacts","currentUser","setCurrentUser","undefined","currentChat","setCurrentChat","isLoaded","setIsLoaded","fetchMyApi","localStorage","getItem","JSON","parse","fetch","isAvatarImageSet","data","get","_id","handleChatChange","chat","Container","div"],"sources":["C:/Users/Adam/Desktop/Apki/chat-box/src/pages/Chat.jsx"],"sourcesContent":["\r\nimport React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { allUsersRoutes } from '../utils/APIRoutes'\r\nimport Contacts from './../components/Contacts';\r\nimport Welcome from '../components/Welcome'\r\nimport ChatContainer from '../components/ChatContainer'\r\nconst Chat = () => {\r\n  const navigate = useNavigate();\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  const [currentChat, setCurrentChat] =useState(undefined);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  //set current user\r\n  useEffect(()=> {\r\n     const fetchMyApi = async() =>{\r\n      if(!localStorage.getItem(\"chat-app-user\")){\r\n          navigate(\"/login\");\r\n        }else{\r\n          setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\r\n          setIsLoaded(true);\r\n        } \r\n     }\r\n\r\n\r\n      fetchMyApi();\r\n   \r\n  },[]);\r\n\r\n  useEffect( () =>{\r\n    const fetch = async()=>{\r\n  if(currentUser){\r\n    if(currentUser.isAvatarImageSet){\r\n      const data = await axios.get(`${allUsersRoutes}/${currentUser._id}`);\r\n      setContacts(data.data);\r\n    }else{\r\n      navigate(\"/setAvatar\");\r\n    }\r\n   }\r\n    }\r\n    \r\n    fetch();\r\n \r\n  },[]);\r\n  const handleChatChange =(chat)=>{\r\n    setCurrentChat(chat)\r\n  }\r\n  return (\r\n   <Container>\r\n    <div className='container'>\r\n    <Contacts contacts={contacts} currentUser={currentUser} changeChat={handleChatChange}/>\r\n    {\r\n      isLoaded & currentChat === undefined ? <Welcome currentUser={currentUser} /> :\r\n      <ChatContainer  currentUser={currentUser}/>\r\n    }\r\n    \r\n    </div>\r\n   </Container>\r\n  )\r\n}\r\n\r\n\r\nconst Container = styled.div`\r\nheight: 100vh;\r\nwidth: 100vw;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\ngap: 1rem;\r\nalign-items: center;\r\nbackground-color: #131324;\r\n.container{\r\n  height: 85vh;\r\n  width: 85vw;\r\n  background-color: #00000076;\r\n  display: grid;\r\n  grid-template-columns: 25% 75%;\r\n  @media screen and (min-width: 720px) and (max-width:1080px){\r\n    grid-template-columns: 35% 65%;    \r\n  }\r\n\r\n}\r\n\r\n`;\r\nexport default Chat;\r\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AACA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACe,SAAD,CAA9C;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAA+BjB,QAAQ,CAACe,SAAD,CAA7C;EACA,MAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC,CALiB,CAMjB;;EACAC,SAAS,CAAC,MAAK;IACZ,MAAMmB,UAAU,GAAG,YAAU;MAC5B,IAAG,CAACC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAJ,EAA0C;QACtCZ,QAAQ,CAAC,QAAD,CAAR;MACD,CAFH,MAEO;QACHI,cAAc,CAAC,MAAMS,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAP,CAAd;QACAH,WAAW,CAAC,IAAD,CAAX;MACD;IACH,CAPD;;IAUCC,UAAU;EAEb,CAbQ,EAaP,EAbO,CAAT;EAeAnB,SAAS,CAAE,MAAK;IACd,MAAMwB,KAAK,GAAG,YAAS;MACzB,IAAGZ,WAAH,EAAe;QACb,IAAGA,WAAW,CAACa,gBAAf,EAAgC;UAC9B,MAAMC,IAAI,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAW,GAAEvB,cAAe,IAAGQ,WAAW,CAACgB,GAAI,EAA/C,CAAnB;UACAjB,WAAW,CAACe,IAAI,CAACA,IAAN,CAAX;QACD,CAHD,MAGK;UACHjB,QAAQ,CAAC,YAAD,CAAR;QACD;MACD;IACC,CATD;;IAWAe,KAAK;EAEN,CAdQ,EAcP,EAdO,CAAT;;EAeA,MAAMK,gBAAgB,GAAGC,IAAD,IAAQ;IAC9Bd,cAAc,CAACc,IAAD,CAAd;EACD,CAFD;;EAGA,oBACC,QAAC,SAAD;IAAA,uBACC;MAAK,SAAS,EAAC,WAAf;MAAA,wBACA,QAAC,QAAD;QAAU,QAAQ,EAAEpB,QAApB;QAA8B,WAAW,EAAEE,WAA3C;QAAwD,UAAU,EAAEiB;MAApE;QAAA;QAAA;QAAA;MAAA,QADA,EAGEZ,QAAQ,GAAGF,WAAW,KAAKD,SAA3B,gBAAuC,QAAC,OAAD;QAAS,WAAW,EAAEF;MAAtB;QAAA;QAAA;QAAA;MAAA,QAAvC,gBACA,QAAC,aAAD;QAAgB,WAAW,EAAEA;MAA7B;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAYD,CApDD;;GAAMJ,I;UACaL,W;;;KADbK,I;AAuDN,MAAMuB,SAAS,GAAG9B,MAAM,CAAC+B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;MAAMD,S;AAsBN,eAAevB,IAAf"},"metadata":{},"sourceType":"module"}