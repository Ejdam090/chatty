{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Desktop\\\\Apki\\\\chat-box\\\\src\\\\components\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport ChatInput from './ChatInput';\nimport Logout from './Logout';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { getAllMessageRoute, sendMessageRoute } from '../utils/APIRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatContainer = _ref => {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessag] = useState(null);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      if (currentChat) {\n        const response = await axios.post(getAllMessageRoute, {\n          from: currentUser._id,\n          to: currentChat._id\n        });\n        setMessages(response.data);\n      }\n\n      ;\n    };\n\n    fetchAPI();\n  }, [currentChat]);\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentUser._id,\n      message: msg\n    });\n    socket.current.emit('send-msg', {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessag({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behaviour: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml; base64, ${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)\n          }, uuidv4, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatContainer, \"60O3IQ/n6T24DUCbYbxVUKhWAh4=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\npadding-top: 1rem;\ndisplay: grid;\ngrid-template-rows: 10% 78% 12%;\n.chat-header{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details{\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        .avatar{\n            img{\n                height: 3rem;\n            }\n        }\n        .username{\n            h3{\n                color: white;\n            }\n        }\n    }\n}\n.chat-message{\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap:1rem;\n    overflow: auto;\n    .message{\n        display: flex;\n        align-items: center;\n        .content{\n            max-width: 40%;\n            overflow-wrap: break-word;\n            padding: 1rem;\n            font-size: 1.1rem;\n            border-radius: 1rem;\n            color: #d1d1d1;\n\n        }\n    }\n    .sended{\n        justify-content: flex-end;\n        .content{\n            background-color: #4f04ff21;\n        }\n    }\n    .recieved{\n        justify-content: flex-start;\n        .content{\n            background-color: #9900ff20;\n        }\n    }\n  }\n`;\n_c2 = Container;\nexport default ChatContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","ChatInput","Logout","v4","uuidv4","axios","getAllMessageRoute","sendMessageRoute","ChatContainer","currentChat","currentUser","socket","messages","setMessages","arrivalMessage","setArrivalMessag","scrollRef","fetchAPI","response","post","from","_id","to","data","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","on","prev","scrollIntoView","behaviour","avatarImage","username","map","Container","div"],"sources":["C:/Users/Adam/Desktop/Apki/chat-box/src/components/ChatContainer.jsx"],"sourcesContent":["import React,{useEffect, useState, useRef} from 'react'\r\nimport styled from 'styled-components'\r\nimport ChatInput from './ChatInput';\r\nimport Logout from './Logout';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport axios from 'axios';\r\nimport { getAllMessageRoute, sendMessageRoute } from '../utils/APIRoutes';\r\nconst ChatContainer = ({currentChat, currentUser, socket}) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [arrivalMessage, setArrivalMessag] = useState(null);\r\n    const scrollRef = useRef();\r\n   \r\n\r\n    useEffect(  ()=>{\r\n const fetchAPI = async () => {\r\n    if(currentChat){\r\n            const response = await axios.post(getAllMessageRoute,{\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n        });\r\n        setMessages(response.data);\r\n    };\r\n    }\r\n    \r\n\r\n        fetchAPI();\r\n       \r\n    }, [currentChat]);\r\n    \r\n    const handleSendMsg =async (msg) => {\r\n        await axios.post(sendMessageRoute,{\r\n            from: currentUser._id,\r\n            to: currentUser._id,\r\n            message: msg,\r\n        });\r\n        socket.current.emit('send-msg', {\r\n          to: currentChat._id,\r\n            from: currentUser._id,\r\n            message:msg,\r\n        });\r\n        const msgs = [...messages];\r\n        msgs.push({fromSelf:true, message:msg});\r\n        setMessages(msgs);\r\n    };\r\n    useEffect(()=>{\r\n        if(socket.current){\r\n            socket.current.on(\"msg-recieve\", (msg)=>{\r\n                setArrivalMessag({fromSelf:false, message:msg});\r\n            })\r\n        }\r\n    },[]);\r\n    useEffect(()=>{\r\n        arrivalMessage && setMessages((prev)=>[...prev,arrivalMessage])\r\n    },[arrivalMessage]);\r\n    useEffect(()=>{\r\n        scrollRef.current?.scrollIntoView({behaviour:'smooth'});\r\n    },[messages])\r\n  return (\r\n    <>\r\n        {\r\n            currentChat &&(\r\n             <Container>\r\n        <div className='chat-header'>\r\n            <div className='user-details'>\r\n                <div className='avatar'>\r\n                <img src={`data:image/svg+xml; base64, ${currentChat.avatarImage}`} alt='avatar'/>\r\n                </div>\r\n                <div className='username'>\r\n                    <h3>{currentChat.username}</h3>\r\n                </div>\r\n            </div>\r\n            <Logout />\r\n        </div>\r\n        <div className='chat-message'>\r\n            {\r\n                messages.map((message) =>{\r\n                    \r\n                        return(\r\n                            <div ref={scrollRef} key={uuidv4}>\r\n                                <div className={`message ${message.fromSelf ? \"sended\": \"recieved\"}`}> \r\n                                    <div className='content'>\r\n                                        <p>\r\n                                            {message.message}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    \r\n                })\r\n            }\r\n        </div>\r\n        <ChatInput handleSendMsg={handleSendMsg}/>\r\n    </Container>    \r\n            )\r\n        }\r\n    </>\r\n   \r\n  )\r\n}\r\nconst Container = styled.div`\r\npadding-top: 1rem;\r\ndisplay: grid;\r\ngrid-template-rows: 10% 78% 12%;\r\n.chat-header{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    .user-details{\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 1rem;\r\n        .avatar{\r\n            img{\r\n                height: 3rem;\r\n            }\r\n        }\r\n        .username{\r\n            h3{\r\n                color: white;\r\n            }\r\n        }\r\n    }\r\n}\r\n.chat-message{\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap:1rem;\r\n    overflow: auto;\r\n    .message{\r\n        display: flex;\r\n        align-items: center;\r\n        .content{\r\n            max-width: 40%;\r\n            overflow-wrap: break-word;\r\n            padding: 1rem;\r\n            font-size: 1.1rem;\r\n            border-radius: 1rem;\r\n            color: #d1d1d1;\r\n\r\n        }\r\n    }\r\n    .sended{\r\n        justify-content: flex-end;\r\n        .content{\r\n            background-color: #4f04ff21;\r\n        }\r\n    }\r\n    .recieved{\r\n        justify-content: flex-start;\r\n        .content{\r\n            background-color: #9900ff20;\r\n        }\r\n    }\r\n  }\r\n`;\r\nexport default ChatContainer"],"mappings":"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"},"metadata":{},"sourceType":"module"}