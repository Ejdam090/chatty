[{"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\index.js":"1","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\App.js":"2","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\pages\\Chat.jsx":"3","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\pages\\Register.jsx":"4","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\pages\\Login.jsx":"5","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\utils\\APIRoutes.js":"6","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\pages\\SetAvatar.jsx":"7","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\Contacts.jsx":"8","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\Welcome.jsx":"9","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\ChatContainer.jsx":"10","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\Logout.jsx":"11","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\ChatInput.jsx":"12"},{"size":467,"mtime":1661110161961,"results":"13","hashOfConfig":"14"},{"size":612,"mtime":1661110156535,"results":"15","hashOfConfig":"14"},{"size":2726,"mtime":1661112819512,"results":"16","hashOfConfig":"14"},{"size":5011,"mtime":1662148302736,"results":"17","hashOfConfig":"14"},{"size":4132,"mtime":1661113095436,"results":"18","hashOfConfig":"14"},{"size":475,"mtime":1661111745210,"results":"19","hashOfConfig":"14"},{"size":4455,"mtime":1661112969358,"results":"20","hashOfConfig":"14"},{"size":4008,"mtime":1661111272820,"results":"21","hashOfConfig":"14"},{"size":902,"mtime":1661112465860,"results":"22","hashOfConfig":"14"},{"size":4705,"mtime":1661112846951,"results":"23","hashOfConfig":"14"},{"size":1010,"mtime":1661111795541,"results":"24","hashOfConfig":"14"},{"size":3666,"mtime":1661110046952,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xvvxwh",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\index.js",[],[],"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\App.js",[],[],"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\pages\\Chat.jsx",[],["66","67"],"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\pages\\Register.jsx",["68"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"../assets/logo.svg\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { registerRoutes } from \"./../utils/APIRoutes\";\r\n\r\nconst Register = () => {\r\n  //values\r\n  const navigate = useNavigate();\r\n  const [vaules, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n  //submit form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (handleValidation()) {\r\n      const { password, username, email } = vaules;\r\n      const { data } = await axios.post(registerRoutes, {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      if (data.status === false) {\r\n        toast.error(data.msg, toastOptions);\r\n      }\r\n      if (data.status === true) {\r\n        localStorage.setItem(process.env.REACT_APP_LOCALHOST_KEY, JSON.stringify(data.user));\r\n      }\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    const { password, confirmPassword, username, email } = vaules;\r\n    if (password !== confirmPassword) {\r\n      toast.error(\r\n        \"Password and confirm password should be same! \",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    }\r\n    if (username.length < 3) {\r\n      toast.error(\"Username should be greater than 3 characters\", toastOptions);\r\n      return false;\r\n    }\r\n    if (email.length < 3) {\r\n      toast.error(\"Email should be greater than 3 characters\", toastOptions);\r\n      return false;\r\n    }\r\n    if (password.length < 8) {\r\n      toast.error(\r\n        \"Password should be equal or greater than 8 characters\",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    }\r\n    if (email === \"\") {\r\n      toast.error(\"Email is required!\", toastOptions);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  //setting values\r\n  const handleChange = (e) => {\r\n    setValues({ ...vaules, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n          <div className=\"brand\">\r\n            <img src={Logo} alt=\"Logo\" />\r\n            <h1>Chatty</h1>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <button type=\"submit\"> Create account</button>\r\n          <span>\r\n            Already have an account? <Link to=\"/login\">Login</Link>\r\n          </span>\r\n        </form>\r\n      </FormContainer>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst FormContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .brand {\r\n    display: flex;\r\n    align-content: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 5rem;\r\n    }\r\n    h1 {\r\n      color: white;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #00000076;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n    input {\r\n      background-color: transparent;\r\n      padding: 1rem;\r\n      border: 0.1rem solid #4e0eff;\r\n      border-radius: 0.4rem;\r\n      color: white;\r\n      width: 100%;\r\n      font-size: 1rem;\r\n      &:focus {\r\n        border: 0.1rem solid #997af0;\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n  button {\r\n    background-color: #997af0;\r\n    color: white;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 0.4rem;\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    transition: all 0.5s ease-in-out;\r\n    &:hover {\r\n      background-color: #4e0eff;\r\n    }\r\n  }\r\n  span {\r\n    color: white;\r\n    text-transform: uppercase;\r\n    a {\r\n      color: #4e0eff;\r\n      font-weight: bold;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\nexport default Register;\r\n","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\pages\\Login.jsx",["69"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"../assets/logo.svg\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { loginRoutes } from \"./../utils/APIRoutes\";\r\n\r\nconst Login = () => {\r\n  //values\r\n  const navigate = useNavigate();\r\n  const [vaules, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n  useEffect(() => {\r\n    if (localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  //submit form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (handleValidation()) {\r\n      const { password, username } = vaules;\r\n      const { data } = await axios.post(loginRoutes, {\r\n        username,\r\n        password,\r\n      });\r\n      if (data.status === false) {\r\n        toast.error(data.msg, toastOptions);\r\n      }\r\n      if (data.status === true) {\r\n        localStorage.setItem(process.env.REACT_APP_LOCALHOST_KEY, JSON.stringify(data.user));\r\n      }\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    const { password, username } = vaules;\r\n    if (password === \"\") {\r\n      toast.error(\r\n        \"Password and confirm password should be same! \",\r\n        toastOptions\r\n      );\r\n      return false;\r\n    }\r\n    if (username.length === \"\") {\r\n      toast.error(\"Username and Password is required\", toastOptions);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  //setting values\r\n  const handleChange = (e) => {\r\n    setValues({ ...vaules, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n          <div className=\"brand\">\r\n            <img src={Logo} alt=\"Logo\" />\r\n            <h1>Chatty</h1>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            onChange={(e) => handleChange(e)}\r\n            min=\"3\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <button type=\"submit\"> Login</button>\r\n          <span>\r\n            Don't have an account? <Link to=\"/register\">Register</Link>\r\n          </span>\r\n        </form>\r\n      </FormContainer>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst FormContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .brand {\r\n    display: flex;\r\n    align-content: center;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n    img {\r\n      height: 5rem;\r\n    }\r\n    h1 {\r\n      color: white;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    background-color: #00000076;\r\n    border-radius: 2rem;\r\n    padding: 3rem 5rem;\r\n    input {\r\n      background-color: transparent;\r\n      padding: 1rem;\r\n      border: 0.1rem solid #4e0eff;\r\n      border-radius: 0.4rem;\r\n      color: white;\r\n      width: 100%;\r\n      font-size: 1rem;\r\n      &:focus {\r\n        border: 0.1rem solid #997af0;\r\n        outline: none;\r\n      }\r\n    }\r\n  }\r\n  button {\r\n    background-color: #997af0;\r\n    color: white;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 0.4rem;\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    transition: all 0.5s ease-in-out;\r\n    &:hover {\r\n      background-color: #4e0eff;\r\n    }\r\n  }\r\n  span {\r\n    color: white;\r\n    text-transform: uppercase;\r\n    a {\r\n      color: #4e0eff;\r\n      font-weight: bold;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\nexport default Login;\r\n","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\utils\\APIRoutes.js",[],[],"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\pages\\SetAvatar.jsx",["70"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport loader from \"../assets/loader.gif\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { setAvatarRoutes } from \"../utils/APIRoutes\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst SetAvatar = () => {\r\n  const api = \"https://api.multiavatar.com/45678945\";\r\n  const navigate = useNavigate();\r\n  const [avatar, setAvatar] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 8000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const NavigateUser = async () => {\r\n      if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n    NavigateUser();\r\n  }, []);\r\n\r\n  const setProfilePicture = async () => {\r\n    if (selectedAvatar === undefined) {\r\n      toast.error(\"Please select an avatar\", toastOptions);\r\n    } else {\r\n      const user = await JSON.parse(\r\n        localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n      );\r\n\r\n      const { data } = await axios.post(`${setAvatarRoutes}/${user._id}`, {\r\n        image: avatar[selectedAvatar],\r\n      });\r\n      if (data.isSet) {\r\n        user.isAvatarImageSet = true;\r\n        user.isAvatarImage = data.image;\r\n        localStorage.setItem(\r\n          process.env.REACT_APP_LOCALHOST_KEY,\r\n          JSON.stringify(user)\r\n        );\r\n        navigate(\"/\");\r\n      } else {\r\n        toast.error(\"Error setting avatar. Please try again\", toastOptions);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = [];\r\n      for (let i = 0; i < 4; i++) {\r\n        const image = await axios.get(\r\n          `${api}/ ${Math.round(Math.random() * 10000)}`\r\n        );\r\n        const buffer = new Buffer(image.data);\r\n        data.push(buffer.toString(`base64`));\r\n      }\r\n      setAvatar(data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Container>\r\n          <img src={loader} alt=\"loader\" className=\"loader\" />\r\n        </Container>\r\n      ) : (\r\n        <Container>\r\n          <div className=\"title-container\">\r\n            <h1>Pick an avatar as your profile picture</h1>\r\n          </div>\r\n          <div className=\"avatars\">\r\n            {avatar.map((avatars, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`avatar ${\r\n                    selectedAvatar === index ? \"selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={`data:image/svg+xml; base64, ${avatars}`}\r\n                    alt=\"avatar\"\r\n                    onClick={() => setSelectedAvatar(index)}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <button className=\"submit-btn\" onClick={setProfilePicture}>\r\n            Set as Profile Picture\r\n          </button>\r\n        </Container>\r\n      )}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 3rem;\r\n  background-color: #131324;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  .loader {\r\n    max-inline-size: 100%;\r\n  }\r\n  .title-container {\r\n    h1 {\r\n      color: white;\r\n    }\r\n  }\r\n  .avatars {\r\n    display: flex;\r\n    gap: 2rem;\r\n    .avatar {\r\n      border: 0.4rem solid transparent;\r\n      padding: 0.4rem;\r\n      border-radius: 5rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      transition: 0.5s ease-in-out;\r\n      img {\r\n        height: 6rem;\r\n      }\r\n    }\r\n    .selected {\r\n      border: 0.4rem solid #4e0eff;\r\n    }\r\n  }\r\n  .submit-btn {\r\n    background-color: #997af0;\r\n    color: white;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 0.4rem;\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    transition: all 0.5s ease-in-out;\r\n    &:hover {\r\n      background-color: #4e0eff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SetAvatar;\r\n","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\Contacts.jsx",[],[],"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\Welcome.jsx",[],[],"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\ChatContainer.jsx",["71"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Logout from \"./Logout\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { getAllMessageRoute, sendMessageRoute } from \"../utils/APIRoutes\";\r\nconst ChatContainer = ({ currentChat, socket }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const fetchCurrentChat = async () => {\r\n      if (currentChat) {\r\n        const data = await JSON.parse(\r\n          localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n        );\r\n        const response = await axios.post(getAllMessageRoute, {\r\n          from: data._id,\r\n          to: currentChat._id,\r\n        });\r\n        setMessages(response.data);\r\n      }\r\n    };\r\n\r\n    fetchCurrentChat();\r\n  }, [currentChat]);\r\n  useEffect(() => {\r\n    const fetchCurrentChat = async () => {\r\n      if (currentChat) {\r\n        await JSON.parse(\r\n          localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n        )._id;\r\n      }\r\n    };\r\n    fetchCurrentChat();\r\n  }, [currentChat]);\r\n  const handleSendMsg = async (msg) => {\r\n    const data = await JSON.parse(\r\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n    );\r\n    socket.current.emit(\"send-msg\", {\r\n      to: currentChat._id,\r\n      from: data._id,\r\n      msg,\r\n    });\r\n    await axios.post(sendMessageRoute, {\r\n      from: data._id,\r\n      to: currentChat._id,\r\n      message: msg,\r\n    });\r\n    const msgs = [...messages];\r\n    msgs.push({ fromSelf: true, message: msg });\r\n    setMessages(msgs);\r\n  };\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\"msg-recieve\", (msg) => {\r\n        setArrivalMessage({ fromSelf: false, message: msg });\r\n      });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage]);\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n  return (\r\n    <>\r\n      {currentChat && (\r\n        <Container>\r\n          <div className=\"chat-header\">\r\n            <div className=\"user-details\">\r\n              <div className=\"avatar\">\r\n                <img\r\n                  src={`data:image/svg+xml; base64, ${currentChat.avatarImage}`}\r\n                  alt=\"avatar\"\r\n                />\r\n              </div>\r\n              <div className=\"username\">\r\n                <h3>{currentChat.username}</h3>\r\n              </div>\r\n            </div>\r\n            <Logout />\r\n          </div>\r\n          <div className=\"chat-message\">\r\n            {messages.map((message) => {\r\n              return (\r\n                <div ref={scrollRef} key={uuidv4()}>\r\n                  <div\r\n                    className={`message ${\r\n                      message.fromSelf ? \"sended\" : \"recieved\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"content\">\r\n                      <p>{message.message}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <ChatInput handleSendMsg={handleSendMsg} />\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst Container = styled.div`\r\n  padding-top: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 10% 78% 12%;\r\n  .chat-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    .user-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n      .username {\r\n        h3 {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .chat-message {\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    overflow: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n    .message {\r\n      display: flex;\r\n      align-items: center;\r\n      .content {\r\n        max-width: 40%;\r\n        overflow-wrap: break-word;\r\n        padding: 1rem;\r\n        font-size: 1.1rem;\r\n        border-radius: 1rem;\r\n        color: #d1d1d1;\r\n      }\r\n    }\r\n    .sended {\r\n      justify-content: flex-end;\r\n      .content {\r\n        background-color: #4f04ff21;\r\n      }\r\n    }\r\n    .recieved {\r\n      justify-content: flex-start;\r\n      .content {\r\n        background-color: #9900ff20;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default ChatContainer;\r\n","C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\Logout.jsx",[],[],"C:\\Users\\Adam\\Desktop\\Apki\\chat-box\\src\\components\\ChatInput.jsx",[],[],{"ruleId":"72","severity":1,"message":"73","line":30,"column":6,"nodeType":"74","endLine":30,"endColumn":8,"suggestions":"75","suppressions":"76"},{"ruleId":"72","severity":1,"message":"73","line":51,"column":6,"nodeType":"74","endLine":51,"endColumn":19,"suggestions":"77","suppressions":"78"},{"ruleId":"72","severity":1,"message":"73","line":31,"column":6,"nodeType":"74","endLine":31,"endColumn":8,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"73","line":29,"column":6,"nodeType":"74","endLine":29,"endColumn":8,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"73","line":32,"column":6,"nodeType":"74","endLine":32,"endColumn":8,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":63,"column":6,"nodeType":"74","endLine":63,"endColumn":8,"suggestions":"83"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["84"],["85"],["86"],["87"],["88"],["89"],["90"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["91"],{"desc":"92","fix":"93"},{"kind":"94","justification":"95"},{"desc":"96","fix":"97"},{"kind":"94","justification":"95"},{"desc":"92","fix":"98"},{"desc":"92","fix":"99"},{"desc":"92","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [navigate]",{"range":"103","text":"104"},"directive","","Update the dependencies array to be: [currentUser, navigate]",{"range":"105","text":"106"},{"range":"107","text":"104"},{"range":"108","text":"104"},{"range":"109","text":"104"},"Update the dependencies array to be: [socket]",{"range":"110","text":"111"},[1144,1146],"[navigate]",[1717,1730],"[currentUser, navigate]",[862,864],[814,816],[1055,1057],[1915,1917],"[socket]"]